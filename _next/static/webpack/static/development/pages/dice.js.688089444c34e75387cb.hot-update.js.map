{"version":3,"file":"static/webpack/static/development/pages/dice.js.688089444c34e75387cb.hot-update.js","sources":["webpack:///./pages/dice.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonBase, Grid, Input } from '@material-ui/core';\nimport Slider from '@material-ui/lab/Slider';\nimport uuid from 'uuid/v4';\nimport PropTypes from 'prop-types';\n\nimport BetHistory from '../components/bet-history';\nimport Container from '../components/base-container';\nimport ContractObserver from '../libs/contract-observer';\n\n\nimport colors from '../libs/styleguide/colors';\nimport texts from '../libs/styleguide/texts';\nimport EosClient from '../libs/eos-client';\n\nimport { actions, selectors } from '../redux';\n\nconst getPayout = (currentBetNumber) => {\n  const expectedValue = 98.46;\n  return (expectedValue / (currentBetNumber - 1)).toFixed(2);\n};\n\nfunction EosAmount(props) {\n  const { amount = 0.0000, style = {} } = props;\n\n  const styles = {\n    root: Object.assign({\n      display: 'flex',\n      flexDirection: 'row-reverse',\n      background: colors.darkGrey2,\n      margin: 0,\n    }, style)\n  };\n  return (\n    <Container style={styles.root}>\n      <span>EOS</span>\n      <span>{amount.toFixed(4)}</span>\n    </Container>\n  );\n}\n\nEosAmount.propTypes = {\n  amount: PropTypes.number,\n  style: PropTypes.object,\n};\n\nclass Balance extends React.Component {\n  state = {\n    balance: 0.0000\n  }\n\n  componentDidMount() {\n    EosClient.getInstance().then(async (eosClient)=>{\n      let result = await eosClient.getMyBalance();\n      let balance = parseFloat(result[0].replace('EOS', '').trim());\n      if (!isNaN(balance)) {\n        this.setState({ balance });\n      }\n    });\n  }\n\n  render() {\n    const styles = {\n      container: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n      eosAmount: {\n        flexBasis: 'auto',\n        flexGrow: 1,\n      }\n    };\n    return (\n      <Container style={styles.container}>\n        <img src=\"static/img/icon-game-wallet.svg\" />\n        <EosAmount style={styles.eosAmount} amount={this.state.balance}/>\n      </Container>\n    );\n  }\n\n}\n\nclass CpuAndRam extends React.Component {\n  render() {\n    const styles = {\n      gridItem: {\n        height: 34,\n        display: 'flex',\n        alignItems: 'center',\n      },\n      barWrap: {\n        flexBasis: 'auto',\n        flexGrow: 1,\n        lineHeight: 9,\n        height: 9,\n        borderRadius: 5,\n        border: '1px solid gray',\n        margin: '0px 5px 0px 5px'\n      },\n      barFill: {\n        width: '50%',\n        lineHeight: 9,\n        height: 9,\n        borderRadius: 5,\n        backgroundImage: 'linear-gradient(to right, #0096ff, #42e8df)',\n        color: 'transparent'\n      },\n      leftText: {\n        marginLeft: 5,\n        width: 30,\n        fontSize: 14,\n      },\n      rightText: {\n        marginRight: 5,\n        width: 34,\n      },\n    };\n\n    return (\n      <Container height={34}>\n        <Grid container>\n          <Grid item xs={6} style={styles.gridItem} >\n            <div style={styles.leftText}>CPU</div>\n            <div style={styles.barWrap}>\n              <div style={styles.barFill}>fill</div>\n            </div>\n            <div style={styles.rightText}>67%</div>\n          </Grid>\n          <Grid item xs={6} style={styles.gridItem} >\n            <div style={styles.leftText}>RAM</div>\n            <div style={styles.barWrap}>\n              <div style={styles.barFill}>fill</div>\n            </div>\n            <div style={styles.rightText}>67%</div>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n\n}\n\nclass OddsInfo extends React.Component {\n  render() {\n    const Content = ({ height, text1, text2 }) => {\n      const styles = {\n        root: {\n          height,\n          display: 'table',\n          width: '100%',\n          background: colors.darkGrey2,\n          borderRadius: 4,\n        },\n        wrapper: {\n          display: 'table-cell',\n          textAlign: 'center',\n          verticalAlign: 'middle',\n        },\n        text1: {\n          fontSize: 28,\n          fontWeight: 500,\n          height: 28,\n          color: colors.clearBlue,\n        },\n        text2: {\n          fontSize: 14,\n          fontWeight: 500,\n          height: 20,\n          marginTop: 4,\n          color: '#d2d2d2',\n        }\n      };\n\n      return (\n        <div style={styles.root}>\n          <div style={styles.wrapper}>\n            <div style={styles.text1}>{text1}</div>\n            <div style={styles.text2}>{text2}</div>\n          </div>\n        </div>\n      );\n    };\n\n    const { currentBetNumber } = this.props;\n    const winChance = `${currentBetNumber - 1}%`;\n    const payOut = getPayout(currentBetNumber);\n\n    const styles = {\n      middleSpacing: { marginTop: 5 }\n    };\n\n    return (\n      <Container>\n        <Content height={120} text1={currentBetNumber} text2={\"小於該數獲勝\"} />\n        <Grid container spacing={8} style={styles.middleSpacing}>\n          <Grid item xs={6}>\n            <Content height={69} text1={payOut} text2={\"賠率\"} />\n          </Grid>\n          <Grid item xs={6}>\n            <Content height={69} text1={winChance} text2={\"中獎概率\"} />\n          </Grid>\n        </Grid>\n      </Container >\n    );\n  }\n}\nOddsInfo.propTypes = {\n  currentBetNumber: PropTypes.number\n};\n\n@connect(({ betAmount, rollUnder, betStatus }) => ({ betAmount, rollUnder, betStatus }))\nclass Dice extends React.Component {\n  state = {\n    rollingNumber: 50,\n  }\n\n  handleRollUnderChange = (event, value) => {\n    this.props.dispatch(actions.updateRollUnder(value));\n  }\n\n  handleBetAmountChange = (event) => {\n    const { value } = event.target;\n    if (isNaN(value) === false && value >= 0) {\n      this.props.dispatch(actions.updateBetAmount(event.target.value));\n    }\n  }\n\n  // eslint-disable-next-line\n  handleBetButton = async (event) => {\n    const rollUnder = selectors.getRollUnder(this.props);\n    const betAmount = selectors.getBetAmount(this.props);\n\n    const betClientId = uuid();\n    const quantity = `${parseFloat(betAmount).toFixed(4)} EOS`;\n    const memo = `${rollUnder}#peter1#userseed#${betClientId}`;\n\n    const trx = await this.eosClient.transfer(quantity, memo);\n    // eslint-disable-next-line\n    console.log(`Transaction ID: ${trx.transaction_id}`);\n\n    this.props.dispatch(actions.rollDice(betClientId));\n    this.contractObserver.addEvent({\n      type: 'onBetResult',\n      betClientId,\n      fn: (bet) => {\n        this.props.dispatch(actions.rollFinished(bet));\n        // eslint-disable-next-line\n        console.log('[onBetResult]', bet);\n      }\n    });\n  }\n\n  componentDidMount() {\n    EosClient.getInstance().then(async (eosClient) => {\n      this.eosClient = eosClient;\n      let betReceipts = await eosClient.getLatestBetReceipts(100);\n      this.props.dispatch(actions.updateBetHistory(betReceipts));\n      this.contractObserver = new ContractObserver(eosClient, this.props.dispatch);\n      this.contractObserver.start();\n    });\n\n    setInterval(() => {\n      const betStatus = selectors.getBetStatus(this.props);\n      if (betStatus.isRolling) {\n        this.setState({ rollingNumber: Math.ceil(Math.random() * 99) });\n      }\n    }, 100);\n  }\n\n  render() {\n\n    const styles = {\n      boardTextTitle: {\n        fontSize: 20,\n        color: '#ffffff',\n        textAlign: 'center',\n        lineHeight: '56px',\n      },\n      selectedCoinButton: {\n        width: 75,\n        height: 42,\n        borderRadius: 4,\n        backgroundImage: colors.yellow,\n      },\n      coinButton: {\n        width: 75,\n        height: 42,\n        borderRadius: 4,\n        backgroundImage: colors.yellow,\n      },\n      betButton: {\n        height: 48,\n        width: '100%',\n        borderRadius: 4,\n        backgroundImage: colors.yellow,\n      },\n      icon: {\n        verticalAlign: 'middle',\n      },\n      eosFrame: {\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        height: 36,\n        borderRadius: 4,\n        backgroundColor: colors.darkGrey2,\n        marginLeft: 36 + 5,\n      },\n      adjustButtons: {\n        textAlign: 'center',\n        height: 25,\n        width: '100%',\n        borderRadius: 4,\n        border: 0,\n        color: '#ffffff',\n        backgroundColor: colors.darkGrey2,\n      }\n    };\n\n    const rollUnder = selectors.getRollUnder(this.props);\n    const betAmount = selectors.getBetAmount(this.props);\n    const betStatus = selectors.getBetStatus(this.props);\n\n    return (\n      <div>\n        <Balance />\n        <CpuAndRam />\n\n        <br />\n\n        <OddsInfo currentBetNumber={rollUnder} />\n\n        <br />\n        <Container>\n          <div>\n            <img src=\"static/img/icon-game-coin.svg\" style={styles.icon} />\n            <span>投注金額</span>\n          </div>\n          <br />\n\n          <div>\n            <div style={{ \"float\": 'left', width: 36 }}>\n              <img src=\"static/img/token-eos.svg\" style={styles.icon} />\n            </div>\n            <div style={styles.eosFrame}>\n              <span>EOS</span>\n              <Input disableUnderline={true} type=\"number\" inputProps={{\n                style: {\n                  color: '#ffffff',\n                  fontSize: 16,\n                  backgroundColor: 'transparent',\n                  border: 0,\n                }\n              }} value={parseFloat(betAmount).toFixed(2)} onChange={this.handleBetAmountChange} />\n            </div>\n          </div>\n          <br />\n\n          <Grid container spacing={8}>\n            <Grid item xs={3}><ButtonBase style={styles.adjustButtons}>1/2</ButtonBase></Grid>\n            <Grid item xs={3}><ButtonBase style={styles.adjustButtons}>2x </ButtonBase></Grid>\n            <Grid item xs={3}><ButtonBase style={styles.adjustButtons}>MIN</ButtonBase></Grid>\n            <Grid item xs={3}><ButtonBase style={styles.adjustButtons}>MAX</ButtonBase></Grid>\n          </Grid>\n\n          <br />\n          <Slider min={2} max={96} step={1}\n            value={rollUnder}\n            onChange={this.handleRollUnderChange}\n          />\n          <br />\n\n          <div>\n            <img src=\"static/img/icon-game-coin.svg\" style={styles.icon} />\n            <span>贏得獎金</span>\n          </div>\n          <br />\n\n          <div>\n            <div style={{ \"float\": 'left', width: 36 }}>\n              <img src=\"static/img/token-eos.svg\" style={styles.icon} />\n            </div>\n            <div style={styles.eosFrame}>\n              <EosAmount amount={betAmount * getPayout(rollUnder)}/>\n            </div>\n          </div>\n        </Container>\n\n        <br />\n        <div style={{ margin: '0px 10px 0px 10px' }}>\n          <ButtonBase style={styles.betButton} onClick={this.handleBetButton}>\n            <div style={texts.ButtonLarge}>{betStatus.isRolling ? this.state.rollingNumber : '開始投注'}</div>\n          </ButtonBase>\n        </div>\n\n        <br />\n\n        <BetHistory />\n\n        <style jsx global>{`\n          body {\n            width: 100%;\n            height: 1000px;\n            background-color: ${colors.darkGrey2};\n            font-family: Roboto, Helvetica, Arial, sans-serif;\n            margin: 0px;\n            overflow-x: hidden;\n            color: #ffffff;\n          }\n        `}</style>\n\n      </div>\n    );\n  }\n}\nDice.propTypes = {\n  dispatch: PropTypes.func,\n};\n\nexport default Dice;"],"mappings":"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AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAuBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AArCA;AAgzEA;AAAA;AAAA;AAAA;AAAA;AAyFA;;;;AA1MA;AA4MA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}